---
- name: Ensure monitoring dependencies are installed
  ansible.builtin.apt:
    name:
      - sysstat
      - mailutils
      - python3-pip
      - python3-venv
    state: present
    update_cache: true

- name: Ensure uv CLI is installed
  ansible.builtin.pip:
    name: "uv=={{ monitor_uv_version }}"
    state: present
    executable: pip3

- name: Ensure monitoring virtualenv parent directory exists
  ansible.builtin.file:
    path: "{{ monitor_virtualenv_dir | dirname }}"
    state: directory
    mode: "0755"

- name: Check presence of uv lock file
  ansible.builtin.stat:
    path: "{{ monitor_uv_requirements }}"
  register: monitor_uv_lock

- name: Ensure uv lock file is available
  ansible.builtin.assert:
    that: monitor_uv_lock.stat.exists
    fail_msg: "uv.lock is missing at {{ monitor_uv_requirements }}; sync the repository before deploying monitoring dependencies."

- name: Export runtime requirements with uv
  ansible.builtin.command:
    cmd: uv export --frozen --no-dev --output-file {{ app_root }}/requirements-monitor.txt
    chdir: "{{ app_root }}"
  environment:
    UV_LINK_MODE: copy
  register: monitor_uv_export
  changed_when: false

- name: Provision monitoring virtualenv via uv
  ansible.builtin.command:
    cmd: uv venv --python {{ monitor_python_version }} {{ monitor_virtualenv_dir }}
    chdir: "{{ app_root }}"
    creates: "{{ monitor_virtualenv_dir }}/bin/python"
  environment:
    UV_LINK_MODE: copy

- name: Sync monitoring dependencies with uv
  ansible.builtin.command:
    cmd: uv pip sync --python {{ monitor_virtualenv_dir }}/bin/python {{ app_root }}/requirements-monitor.txt
    chdir: "{{ app_root }}"
  environment:
    UV_LINK_MODE: copy
  register: monitor_uv_sync
  changed_when: "('installed' in (monitor_uv_sync.stdout | lower)) or ('removed' in (monitor_uv_sync.stdout | lower)) or ('installed' in (monitor_uv_sync.stderr | lower)) or ('removed' in (monitor_uv_sync.stderr | lower))"

- name: Remove exported requirements file
  ansible.builtin.file:
    path: "{{ app_root }}/requirements-monitor.txt"
    state: absent
  changed_when: false

- name: Ensure monitoring state directory exists
  ansible.builtin.file:
    path: "{{ monitor_state_path | dirname }}"
    state: directory
    mode: "0755"

- name: Ensure monitoring script is executable
  ansible.builtin.file:
    path: "{{ app_root }}/monitoring/monitor.py"
    mode: "0755"

- name: Render monitoring configuration
  ansible.builtin.template:
    src: "{{ playbook_dir }}/templates/spondex-monitor-config.yaml.j2"
    dest: "{{ app_root }}/monitoring/config.yaml"
    mode: "0640"
    force: "{{ monitor_overwrite_config | bool }}"
    backup: "{{ monitor_overwrite_config | bool }}"

- name: Install systemd service for monitoring
  ansible.builtin.template:
    src: "{{ playbook_dir }}/templates/spondex-monitor.service.j2"
    dest: "/etc/systemd/system/spondex-monitor.service"
    mode: "0644"
  notify: Reload systemd daemon for monitoring units

- name: Install systemd timer for monitoring
  ansible.builtin.template:
    src: "{{ playbook_dir }}/templates/spondex-monitor.timer.j2"
    dest: "/etc/systemd/system/spondex-monitor.timer"
    mode: "0644"
  notify: Reload systemd daemon for monitoring units

- name: Ensure monitoring timer is enabled
  ansible.builtin.systemd:
    name: spondex-monitor.timer
    enabled: true
    state: started
