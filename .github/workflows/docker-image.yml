name: Build Docker Image

on:
  workflow_call:
    inputs:
      push_images:
        description: 'Push built images to GHCR'
        type: boolean
        default: false
  workflow_dispatch:
    inputs:
      push_images:
        description: 'Push built images to GHCR'
        type: boolean
        default: false
  pull_request:
    paths:
      - 'Dockerfile'
      - 'docker-compose.prod.yml'
      - '.github/workflows/docker-image.yml'
      - 'pyproject.toml'
      - 'uv.lock'

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"

      - name: Run Ruff lint
        run: uvx ruff@0.6.5 check .

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        if: inputs.push_images
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/spondex
          tags: |
            type=sha
            type=ref,event=branch
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Build and optionally push image
        uses: docker/build-push-action@v6
        with:
          push: ${{ inputs.push_images }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
